{"ast":null,"code":"var _jsxFileName = \"/home/jay/Desktop/TaskManagement/front/src/components/SinglePost.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../App.css\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SinglePost() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/singlePost/byId/${id}`).then(response => {\n      setPostObject(response.data[0]);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []); //did this fix problem of having to rerender upon create/delete comment??\n  //thought is rerender any change to comments and abovce gets send back comment details\n  const addComment = () => {\n    axios.post(\"http://localhost:3001/comments\", {\n      commentBody: newComment,\n      postID: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(res => {\n      if (res.data.error) {\n        alert(res.data.error);\n      } else {\n        //alert(res.data.username)\n        const commentToAdd = {\n          commentBody: newComment,\n          username: res.data.username,\n          id: res.data.id\n        };\n        setComments([...comments, commentToAdd]);\n        setNewComment(\"\"); //to make the newComment value empty within input\n      }\n    });\n  };\n  const deleteComment = id => {\n    axios.delete(`http://localhost:3001/deleteComment/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(val => {\n        return val.id != id; //I think i rerender upon each\n      }));\n    });\n  };\n  const deletePost = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: postObject.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: postObject.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [postObject.username, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deletePost,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightSide\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addCommentContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Comment..\",\n            value: newComment,\n            onChange: e => {\n              setNewComment(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addComment,\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listOfComments\",\n          children: comments.map((comment, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment\",\n              children: [comment.commentBody, /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\" Username: \", comment.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), authState.username === comment.username && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  deleteComment(comment.id);\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"uApQKjtJMaJ0rUtQ058ZjaFRt4A=\", false, function () {\n  return [useParams];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["axios","React","useEffect","useState","useContext","useParams","AuthContext","jsxDEV","_jsxDEV","SinglePost","_s","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","authState","get","then","response","data","addComment","post","commentBody","postID","headers","accessToken","localStorage","getItem","res","error","alert","commentToAdd","username","deleteComment","delete","filter","val","deletePost","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","postText","onClick","type","placeholder","value","onChange","e","target","map","comment","key","_c","$RefreshReg$"],"sources":["/home/jay/Desktop/TaskManagement/front/src/components/SinglePost.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../App.css\";\nimport { AuthContext } from \"../helpers/AuthContext\";\n\nfunction SinglePost() {\n  let { id } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n\n  const { authState } = useContext(AuthContext);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3001/singlePost/byId/${id}`)\n      .then((response) => {\n        setPostObject(response.data[0]);\n      });\n    axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\n      setComments(response.data);\n    });\n  }, []); //did this fix problem of having to rerender upon create/delete comment??\n//thought is rerender any change to comments and abovce gets send back comment details\n  const addComment = () => {\n    axios\n      .post(\n        \"http://localhost:3001/comments\",\n        {\n          commentBody: newComment,\n          postID: id,\n        },\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      )\n      .then((res) => {\n        if (res.data.error) {\n          alert(res.data.error);\n        } else {\n          //alert(res.data.username)\n          const commentToAdd = {\n            commentBody: newComment,\n            username: res.data.username,\n            id: res.data.id,\n          };\n          setComments([...comments, commentToAdd]);\n          setNewComment(\"\"); //to make the newComment value empty within input\n        }\n      });\n  };\n\n  const deleteComment = (id) => {\n    axios.delete(`http://localhost:3001/deleteComment/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      },\n    }).then(()=> {\n      setComments(comments.filter((val)=>{\n        return val.id != id; //I think i rerender upon each\n      }))\n    });\n  };\n\n  const deletePost = () => {\n    \n  }\n\n  return (\n    <div className=\"postPage\">\n      <div className=\"leftSide\">\n        <div className=\"post\" id=\"individual\">\n          <div className=\"title\">{postObject.title}</div>\n          <div className=\"body\">{postObject.postText}</div>\n          <div className=\"footer\">{postObject.username}\n            <button onClick={deletePost}>Delete</button>\n          </div>\n        </div>\n        <div className=\"rightSide\">\n          <div className=\"addCommentContainer\">\n            <input\n              type=\"text\"\n              placeholder=\"Comment..\"\n              value={newComment}\n              onChange={(e) => {\n                setNewComment(e.target.value);\n              }}\n            />\n            <button onClick={addComment}>Add Comment</button>\n          </div>\n          <div className=\"listOfComments\">\n            {comments.map((comment, key) => {\n              return (\n                <div key={key} className=\"comment\">\n                  {comment.commentBody}\n                  <label> Username: {comment.username} </label>\n                  {authState.username === comment.username && (\n                    <button\n                      onClick={() => {\n                        deleteComment(comment.id);\n                      }}\n                    >\n                      X\n                    </button>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SinglePost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}