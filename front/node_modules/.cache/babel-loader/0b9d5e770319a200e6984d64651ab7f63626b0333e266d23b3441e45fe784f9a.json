{"ast":null,"code":"var _jsxFileName = \"/home/jay/Desktop/TaskManagement/front/src/components/SinglePost.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"../App.css\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SinglePost() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  let navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`http://localhost:3001/singlePost/byId/${id}`).then(response => {\n      setPostObject(response.data[0]);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []); //did this fix problem of having to rerender upon create/delete comment??\n  //thought is rerender any change to comments and abovce gets send back comment details\n  const addComment = () => {\n    axios.post(\"http://localhost:3001/comments\", {\n      commentBody: newComment,\n      postID: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(res => {\n      if (res.data.error) {\n        alert(res.data.error);\n      } else {\n        //alert(res.data.username)\n        const commentToAdd = {\n          commentBody: newComment,\n          username: res.data.username,\n          id: res.data.id\n        };\n        setComments([...comments, commentToAdd]);\n        setNewComment(\"\"); //to make the newComment value empty within input\n      }\n    });\n  };\n  const deleteComment = id => {\n    axios.delete(`http://localhost:3001/deleteComment/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(val => {\n        return val.id != id; //I think i rerender upon each\n      }));\n    });\n  };\n  const deletePost = id => {\n    axios.delete(`http://localhost:3001/deletePost/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      navigate(\"/posts\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: postObject.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: postObject.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [postObject.username, authState.username === postObject.username && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deletePost(postObject.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightSide\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addCommentContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Comment..\",\n            value: newComment,\n            onChange: e => {\n              setNewComment(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addComment,\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listOfComments\",\n          children: comments.map((comment, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment\",\n              children: [comment.commentBody, /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\" Username: \", comment.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), authState.username === comment.username && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  deleteComment(comment.id);\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"88YuSc4S7y9PkkfbgAhBRYX/eeI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["axios","React","useEffect","useState","useContext","useNavigate","useParams","AuthContext","jsxDEV","_jsxDEV","SinglePost","_s","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","authState","navigate","get","then","response","data","addComment","post","commentBody","postID","headers","accessToken","localStorage","getItem","res","error","alert","commentToAdd","username","deleteComment","delete","filter","val","deletePost","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","postText","onClick","type","placeholder","value","onChange","e","target","map","comment","key","_c","$RefreshReg$"],"sources":["/home/jay/Desktop/TaskManagement/front/src/components/SinglePost.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"../App.css\";\nimport { AuthContext } from \"../helpers/AuthContext\";\n\nfunction SinglePost() {\n  let { id } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n\n  const { authState } = useContext(AuthContext);\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3001/singlePost/byId/${id}`)\n      .then((response) => {\n        setPostObject(response.data[0]);\n      });\n    axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\n      setComments(response.data);\n    });\n  }, []); //did this fix problem of having to rerender upon create/delete comment??\n//thought is rerender any change to comments and abovce gets send back comment details\n  const addComment = () => {\n    axios\n      .post(\n        \"http://localhost:3001/comments\",\n        {\n          commentBody: newComment,\n          postID: id,\n        },\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      )\n      .then((res) => {\n        if (res.data.error) {\n          alert(res.data.error);\n        } else {\n          //alert(res.data.username)\n          const commentToAdd = {\n            commentBody: newComment,\n            username: res.data.username,\n            id: res.data.id,\n          };\n          setComments([...comments, commentToAdd]);\n          setNewComment(\"\"); //to make the newComment value empty within input\n        }\n      });\n  };\n\n  const deleteComment = (id) => {\n    axios.delete(`http://localhost:3001/deleteComment/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      },\n    }).then(()=> {\n      setComments(comments.filter((val)=>{\n        return val.id != id; //I think i rerender upon each\n      }))\n    });\n  };\n\n  const deletePost = (id) => {\n    axios.delete(`http://localhost:3001/deletePost/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      },\n    }).then(()=> {\n      navigate(\"/posts\");\n    });\n  };\n\n  return (\n    <div className=\"postPage\">\n      <div className=\"leftSide\">\n        <div className=\"post\" id=\"individual\">\n          <div className=\"title\">{postObject.title}</div>\n          <div className=\"body\">{postObject.postText}</div>\n          <div className=\"footer\">{postObject.username}\n            {authState.username === postObject.username && (\n              <button onClick={()=>{deletePost(postObject.id)}}>Delete</button>\n            )}\n          </div>\n        </div>\n        <div className=\"rightSide\">\n          <div className=\"addCommentContainer\">\n            <input\n              type=\"text\"\n              placeholder=\"Comment..\"\n              value={newComment}\n              onChange={(e) => {\n                setNewComment(e.target.value);\n              }}\n            />\n            <button onClick={addComment}>Add Comment</button>\n          </div>\n          <div className=\"listOfComments\">\n            {comments.map((comment, key) => {\n              return (\n                <div key={key} className=\"comment\">\n                  {comment.commentBody}\n                  <label> Username: {comment.username} </label>\n                  {authState.username === comment.username && (\n                    <button\n                      onClick={() => {\n                        deleteComment(comment.id);\n                      }}\n                    >\n                      X\n                    </button>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SinglePost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}