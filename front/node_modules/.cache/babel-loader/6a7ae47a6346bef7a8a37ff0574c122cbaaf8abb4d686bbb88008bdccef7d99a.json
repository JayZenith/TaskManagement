{"ast":null,"code":"var _jsxFileName = \"/home/jay/Desktop/TaskManagement/front/src/components/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [username, setUsername] = useState(\"\");\n  const [listOfPosts2, setListOfPosts2] = useState([]);\n  //const [listOfPosts,setListOfPosts] = useState([]);\n  const [likedPosts, setLikedPosts] = useState([]);\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      navigate(\"/\");\n    } else {\n      axios.get(`http://localhost:3001/basicInfo/${id}`).then(response => {\n        //console.log(response.data[0].username)\n        setUsername(response.data[0].username);\n      });\n      axios.get(`http://localhost:3001/byuserId/${id}`).then(response => {\n        //console.log(response.data[0].username)\n        console.log(response.data[0]);\n        setListOfPosts2(response.data[0]);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      navigate(\"/\");\n    } else {\n      axios.get(\"http://localhost:3001/posts\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(res => {\n        //setListOfPosts(res.data);\n        setListOfPosts(res.data.listOfPosts);\n        //alert(res.data.listOfPosts);\n        setLikedPosts(res.data.userLikes.map(like => {\n          return like.id;\n        }));\n        //console.log([...likedPosts, 5])\n        //console.log(\"yo\")\n        //console.log(res.data.userLikes);\n      });\n    }\n  }, []);\n  const likePost = postId => {\n    axios.post(\"http://localhost:3001/likes\", {\n      postID: postId\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(listOfPosts.map(post => {\n        if (post.id === postId) {\n          //alert(response.data.liked)\n          if (response.data.liked) return {\n            ...post,\n            dt: post.dt + 1\n          };else return {\n            ...post,\n            dt: post.dt - 1\n          };\n        } else {\n          return post;\n        }\n      }));\n      if (likedPosts.includes(postId)) {\n        setLikedPosts(likedPosts.filter(id => {\n          return id != postId;\n        }));\n      } else {\n        setLikedPosts([...likedPosts, postId]);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profilePageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"basicInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Username: \", username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listOfPosts\",\n      children: listOfPosts2.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [\" \", val.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body\",\n            onClick: () => {\n              navigate(`/singlePost/${val.id}`);\n            },\n            children: [\" \", val.postText, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer\",\n            children: [\" \", val.username, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bi bi-hand-thumbs-up\",\n              onClick: () => {\n                likePost(val.id);\n              },\n              className: likedPosts.includes(val.id) ? \"bi bi-hand-thumbs-up\" : \"bi bi-hand-thumbs-up red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: val.dt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"RSMwWflslpAjxHSHYXxO+WQDsDY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","Profile","_s","id","username","setUsername","listOfPosts2","setListOfPosts2","likedPosts","setLikedPosts","navigate","localStorage","getItem","get","then","response","data","console","log","headers","accessToken","res","setListOfPosts","listOfPosts","userLikes","map","like","likePost","postId","post","postID","liked","dt","includes","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","val","key","title","onClick","postText","class","_c","$RefreshReg$"],"sources":["/home/jay/Desktop/TaskManagement/front/src/components/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from \"axios\";\n\n\nfunction Profile() {\n    let { id } = useParams();\n    const [username, setUsername] = useState(\"\");\n    const [listOfPosts2,setListOfPosts2] = useState([]);\n    //const [listOfPosts,setListOfPosts] = useState([]);\n    const [likedPosts, setLikedPosts] = useState([])\n    let navigate = useNavigate();\n\n    useEffect(()=>{\n        if (!localStorage.getItem(\"accessToken\")){\n            navigate(\"/\");\n          }else{\n            axios.get(`http://localhost:3001/basicInfo/${id}`)\n            .then((response) => {\n                //console.log(response.data[0].username)\n                setUsername(response.data[0].username)\n            });\n\n            axios.get(`http://localhost:3001/byuserId/${id}`)\n            .then((response) => {\n                //console.log(response.data[0].username)\n                console.log(response.data[0])\n                setListOfPosts2(response.data[0])\n            });\n         }\n    }, [])\n\n    useEffect(() => {\n        if (!localStorage.getItem(\"accessToken\")){\n          navigate(\"/\");\n        }else{\n          axios.get(\"http://localhost:3001/posts\", {\n              headers: {accessToken: localStorage.getItem(\"accessToken\")}\n          }).then((res) => {\n          //setListOfPosts(res.data);\n          setListOfPosts(res.data.listOfPosts);\n          //alert(res.data.listOfPosts);\n          setLikedPosts(\n            res.data.userLikes.map((like) => {\n              return like.id;\n            })\n          );\n          //console.log([...likedPosts, 5])\n          //console.log(\"yo\")\n          //console.log(res.data.userLikes);\n          });\n        }\n      }, []);\n\n\n    const likePost = (postId) => {\n        axios.post(\"http://localhost:3001/likes\", {\n            postID: postId\n        }, {\n            headers: {accessToken: localStorage.getItem(\"accessToken\")}\n        }).then((response) => {\n            setListOfPosts(listOfPosts.map((post) => {\n                if(post.id === postId){\n                    //alert(response.data.liked)\n                    if(response.data.liked)\n                        return{...post, dt:post.dt+1}\n                    else\n                        return{...post, dt:post.dt-1}\n                } else {\n                    return post;\n                }\n            }))\n            if(likedPosts.includes(postId)){\n              setLikedPosts(\n                likedPosts.filter((id) => {\n                  return id != postId;\n                })\n              );\n            } else {\n              setLikedPosts([...likedPosts,postId])\n            }\n        })\n\n    }\n\n  return (\n    <div className='profilePageContainer'>\n        <div className='basicInfo'>\n            <h1> Username: {username} </h1>\n        </div>\n        <div className='listOfPosts'>\n            {listOfPosts2.map((val, key) => {\n            return (\n            <div\n                className=\"post\"\n            >\n                <div className=\"title\"> {val.title} </div>\n                <div className=\"body\"\n                    onClick={() => {\n                        navigate(`/singlePost/${val.id}`);\n                    }}\n                > {val.postText} </div>\n                <div className=\"footer\"> {val.username} \n                    \n                    <i class=\"bi bi-hand-thumbs-up\"\n                    onClick={() => {\n                        likePost(val.id);\n                    }}\n                    className={likedPosts.includes(val.id) ? \"bi bi-hand-thumbs-up\" : \"bi bi-hand-thumbs-up red\" \n                        \n                    }\n                    ></i>\n                    <label>\n                        {val.dt}\n                    </label>\n                </div>\n            </div>\n            );\n            })}\n        </div>\n\n    </div>\n  );\n}\n\nexport default Profile"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}